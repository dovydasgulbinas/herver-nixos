# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  # ======= custom ========

  # hdd for backups
  fileSystems."/mnt/herbook" = {
    device = "/dev/disk/by-uuid/c7386055-ac59-4407-b5f9-4132dba8407f";
    fsType = "ext4";
    options = [
      "nofail"
    ];
  };

  environment.etc.crypttab = {
    mode = "0600";
    text = ''
      # <volume-name> <encrypted-device> [key-file] [options]
      data_disk UUID=5785082d-0616-4506-bc25-4b67aa0698ed /root/wd_sa510.key
    '';
  };
  fileSystems."/mnt/data_disk" = {
    device = "/dev/mapper/data_disk";
    fsType = "ext4";
    options = [
      # If you don't have this options attribute, it'll default to "defaults"
      # boot options for fstab. Search up fstab mount options you can use
      "nofail" # Prevent system from failing if this drive doesn't mount
    ];
  };

  # =======================

  boot.initrd.availableKernelModules = ["nvme" "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod"];
  boot.initrd.kernelModules = ["amdgpu"];
  boot.kernelModules = ["kvm-amd"];
  boot.extraModulePackages = [];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/897d39cb-01ee-4e46-8339-1ba1e287e28a";
    fsType = "ext4";
  };

  boot.initrd.luks.devices."luks-53f91795-9708-4d5c-a56d-0a73891bd953".device = "/dev/disk/by-uuid/53f91795-9708-4d5c-a56d-0a73891bd953";

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/F835-C40A";
    fsType = "vfat";
    options = ["fmask=0077" "dmask=0077"];
  };

  swapDevices = [
    {device = "/dev/disk/by-uuid/83199b83-b5d6-40dc-b7e3-8dacab7fd14d";}
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp2s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
